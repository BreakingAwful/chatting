server:
  port: 8088
  servlet:
    context-path: /chatting

spring:
  redis:
    host: 127.0.0.1 #指定redis所在的host
    port: 6379  #指定redis的端口
    password: webchatting  #设置redis密码
    lettuce:
      pool:
        max-active: 8 #最大连接数
        max-idle: 8 #最大空闲数
        min-idle: 0 #最小空闲数
        max-wait: 100ms #连接等待时间
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 500MB
  datasource:
    url: jdbc:mysql://localhost:3306/chatting?serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true
    username: webchatting
    password: webchatting
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 初始化连接数
      initial-size: 1
      # 最小连接池数量，一般设置和initial-size一致
      min-idle: 3
      # 最大活动连接数
      max-active: 20
      # 从连接池获取连接超时
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 打开PSCache，并且指定每个连接上PSCache的大小
      # Oracle等支持游标的数据库，打开此开关，会以数量级提升性能，具体查阅PSCache相关资料
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      # 用来检测连接是否有效的sql，要求是一个查询语句
      validationQuery: SELECT 1 FROM DUAL
      # 配置下面参数用于启动监控页面（/druid），考虑安全问题，默认是关闭的，按需开启
      stat-view-servlet:
        enabled: true
      filter:
        stat:
          enabled: true
      web-stat-filter:
        enabled: true

  sql:
    init:
      mode: always
      schema-locations: classpath:sql/schema.sql
      data-locations: classpath:sql/data.sql

mybatis-plus:
  mapper-locations: classpath:mapper/*
  type-aliases-package: com.sxrekord.chatting.model.po
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: auto # 设置统一的主键生成策略, auto 表示使用数据库的自增策略

pagehelper:
  helperDialect: mysql
  reasonable: true
  pageSizeZero: true

file:
  upload:
    location: D:/dev/repo/chatting-vue/public/upload/
  default:
    user: avatar/default_user_avatar.jpg
    group: avatar/default_group_avatar.jpg

netty:
  server:
    port: 3333

config:
  exclude-uri: [ /user/register, /user/login, /upload, /admin/** ]
  include-uri: [ /** ]

logging:
  pattern:
    console: "\u001b[32m%d{yyyy-MM-dd HH:mm:ss.SSS}\u001b[0m %clr(%5p) [\u001b[35m%clr(${PID:- })\u001b[0m] --- \u001b[33m[%t]\u001b[0m \u001b[36m%-40.40logger{39}\u001b[0m: %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"