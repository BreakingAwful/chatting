<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sxrekord.chatting.dao.MessageDao">
    <sql id="selectFields">
        `id`, `from_id`, `type`, `content_type`, `content_id`, `update_time`
    </sql>

    <sql id="insertFields">
        from_id, to_id, type, content_type, content_id
    </sql>

    <resultMap id="MessageDao" type="Message">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="from_id" jdbcType="BIGINT" property="fromId"/>
        <result column="to_id" jdbcType="BIGINT" property="toId"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="content_type" jdbcType="INTEGER" property="contentType"/>
        <result column="content_id" jdbcType="BIGINT" property="contentId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <insert id="insertMessage" parameterType="Message" keyProperty="messageId">
        insert into message (<include refid="insertFields"/>)
        values(#{fromId}, #{toId}, #{type}, #{contentType}, #{contentId})
    </insert>

    <select id="listMessage" resultMap="MessageDao">
        select * from (
        select <include refid="selectFields"/> from `message`
        where type = #{type} and `update_time` &lt; #{updateTime} and
        (to_id = #{toId}
        <if test="type == 0">
            and from_id = #{fromId}
            or from_id = #{toId} and to_id = #{fromId}
        </if>
        )
        order by update_time desc
        limit 0, #{count}
        ) as ms
        order by ms.update_time;
    </select>

</mapper>